 running on    8 total cores
 distrk:  each k-point on    8 cores,    1 groups
 distr:  one band on    1 cores,    8 groups
 using from now: INCAR     
 vasp.6.1.2 22Jul20 (build Mar 20 2021 11:25:07) complex                        
  
 POSCAR found type information on POSCAR LiP N 
 POSCAR found :  3 types and       8 ions
 scaLAPACK will be used
 -----------------------------------------------------------------------------
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|     The value NCORE = 6 specified in the INCAR file was overwritten,        |
|     because it was not compatible with the 8 processes available:           |
|     NCORE = 1                                                               |
|     was used instead, please check that this makes sense for your           |
|     machine.                                                                |
|                                                                             |
 -----------------------------------------------------------------------------

 -----------------------------------------------------------------------------
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|     For optimal performance we recommend to set                             |
|       NCORE = 4 - approx SQRT(number of cores).                             |
|     NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).      |
|     This setting can greatly improve the performance of VASP for DFT.       |
|     The default, NCORE=1 might be grossly inefficient on modern             |
|     multi-core architectures or massively parallel machines. Do your        |
|     own testing!!!!                                                         |
|     Unfortunately you need to use the default for GW and RPA                |
|     calculations (for HF NCORE is supported but not extensively tested      |
|     yet).                                                                   |
|                                                                             |
 -----------------------------------------------------------------------------

 -----------------------------------------------------------------------------
|                                                                             |
|               ----> ADVICE to this user running VASP <----                  |
|                                                                             |
|     You have a (more or less) 'small supercell' and for smaller cells       |
|     it is recommended to use the reciprocal-space projection scheme!        |
|     The real-space optimization is not efficient for small cells and it     |
|     is also less accurate ...                                               |
|     Therefore, set LREAL=.FALSE. in the INCAR file.                         |
|                                                                             |
 -----------------------------------------------------------------------------

 LDA part: xc-table for Pade appr. of Perdew
 generate k-points for:    8    8   10


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60
 POSCAR, INCAR and KPOINTS ok, starting setup
 FFT: planning ...
 WAVECAR not read
 entering main loop
       N       E                     dE             d eps       ncg     rms          rms(c)
DAV:   1     0.190177886494E+03    0.19018E+03   -0.17029E+04 21632   0.112E+03
DAV:   2    -0.420139732812E+02   -0.23219E+03   -0.22168E+03 25896   0.285E+02
DAV:   3    -0.592792790520E+02   -0.17265E+02   -0.17112E+02 34432   0.675E+01
DAV:   4    -0.602903607560E+02   -0.10111E+01   -0.10052E+01 31480   0.132E+01
DAV:   5    -0.603160972649E+02   -0.25737E-01   -0.25736E-01 30920   0.199E+00    0.279E+01
RMM:   6    -0.542280489798E+02    0.60880E+01   -0.14168E+01 22610   0.159E+01    0.116E+01
RMM:   7    -0.544137337790E+02   -0.18568E+00   -0.27371E+00 30741   0.825E+00    0.604E+00
RMM:   8    -0.544865283392E+02   -0.72795E-01   -0.29345E-01 32346   0.333E+00    0.331E+00
RMM:   9    -0.545011478997E+02   -0.14620E-01   -0.10170E-01 33777   0.197E+00    0.749E-01
RMM:  10    -0.545063560733E+02   -0.52082E-02   -0.50086E-02 37462   0.113E+00    0.270E-01
RMM:  11    -0.545084168690E+02   -0.20608E-02   -0.21013E-02 37999   0.638E-01    0.202E-01
RMM:  12    -0.545098243276E+02   -0.14075E-02   -0.91482E-03 40313   0.405E-01    0.122E-01
RMM:  13    -0.545102398114E+02   -0.41548E-03   -0.29539E-03 38104   0.247E-01    0.378E-02
RMM:  14    -0.545104371204E+02   -0.19731E-03   -0.15019E-03 39549   0.166E-01    0.202E-02
RMM:  15    -0.545105240222E+02   -0.86902E-04   -0.61230E-04 38401   0.105E-01    0.168E-02
RMM:  16    -0.545105550605E+02   -0.31038E-04   -0.26991E-04 36599   0.721E-02    0.772E-03
WARNING in EDDRMM: call to ZHEGV failed, returncode =   6  3      4
RMM:  17    -0.545105770511E+02   -0.21991E-04   -0.13043E-04 34273   0.520E-02    0.481E-03
RMM:  18    -0.545105831638E+02   -0.61127E-05   -0.47640E-05 27176   0.354E-02
   1 F= -.54510583E+02 E0= -.54510583E+02  d E =0.000000E+00  mag=    -0.0000
