 running on    8 total cores
 distrk:  each k-point on    8 cores,    1 groups
 distr:  one band on    1 cores,    8 groups
 using from now: INCAR     
 vasp.6.1.2 22Jul20 (build Mar 20 2021 11:25:07) complex                        
  
 POSCAR found type information on POSCAR LiP N 
 POSCAR found :  3 types and       8 ions
 scaLAPACK will be used
 -----------------------------------------------------------------------------
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|     The value NCORE = 6 specified in the INCAR file was overwritten,        |
|     because it was not compatible with the 8 processes available:           |
|     NCORE = 1                                                               |
|     was used instead, please check that this makes sense for your           |
|     machine.                                                                |
|                                                                             |
 -----------------------------------------------------------------------------

 -----------------------------------------------------------------------------
|                                                                             |
|           W    W    AA    RRRRR   N    N  II  N    N   GGGG   !!!           |
|           W    W   A  A   R    R  NN   N  II  NN   N  G    G  !!!           |
|           W    W  A    A  R    R  N N  N  II  N N  N  G       !!!           |
|           W WW W  AAAAAA  RRRRR   N  N N  II  N  N N  G  GGG   !            |
|           WW  WW  A    A  R   R   N   NN  II  N   NN  G    G                |
|           W    W  A    A  R    R  N    N  II  N    N   GGGG   !!!           |
|                                                                             |
|     For optimal performance we recommend to set                             |
|       NCORE = 4 - approx SQRT(number of cores).                             |
|     NCORE specifies how many cores store one orbital (NPAR=cpu/NCORE).      |
|     This setting can greatly improve the performance of VASP for DFT.       |
|     The default, NCORE=1 might be grossly inefficient on modern             |
|     multi-core architectures or massively parallel machines. Do your        |
|     own testing!!!!                                                         |
|     Unfortunately you need to use the default for GW and RPA                |
|     calculations (for HF NCORE is supported but not extensively tested      |
|     yet).                                                                   |
|                                                                             |
 -----------------------------------------------------------------------------

 -----------------------------------------------------------------------------
|                                                                             |
|               ----> ADVICE to this user running VASP <----                  |
|                                                                             |
|     You have a (more or less) 'small supercell' and for smaller cells       |
|     it is recommended to use the reciprocal-space projection scheme!        |
|     The real-space optimization is not efficient for small cells and it     |
|     is also less accurate ...                                               |
|     Therefore, set LREAL=.FALSE. in the INCAR file.                         |
|                                                                             |
 -----------------------------------------------------------------------------

 LDA part: xc-table for Pade appr. of Perdew
 generate k-points for:    8    8   10


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60


 VERY BAD NEWS! internal error in subroutine IBZKPT:
 Reciprocal lattice and k-lattice belong to different class of lattices. Often results are still useful...      60
 POSCAR, INCAR and KPOINTS ok, starting setup
 FFT: planning ...
 WAVECAR not read
 entering main loop
       N       E                     dE             d eps       ncg     rms          rms(c)
DAV:   1     0.187427755100E+03    0.18743E+03   -0.16705E+04 21632   0.111E+03
DAV:   2    -0.404750354875E+02   -0.22790E+03   -0.21715E+03 26040   0.276E+02
DAV:   3    -0.584486939649E+02   -0.17974E+02   -0.17818E+02 34176   0.676E+01
DAV:   4    -0.594780337882E+02   -0.10293E+01   -0.10226E+01 31624   0.131E+01
DAV:   5    -0.595142054667E+02   -0.36172E-01   -0.36170E-01 30896   0.211E+00    0.248E+01
RMM:   6    -0.539027025922E+02    0.56115E+01   -0.14047E+01 22620   0.152E+01    0.994E+00
RMM:   7    -0.541312575716E+02   -0.22855E+00   -0.22360E+00 31279   0.771E+00    0.539E+00
RMM:   8    -0.541888610958E+02   -0.57604E-01   -0.29664E-01 32245   0.313E+00    0.301E+00
WARNING in EDDRMM: call to ZHEGV failed, returncode =   8  4      3
RMM:   9    -0.542064706621E+02   -0.17610E-01   -0.92273E-02 32978   0.191E+00    0.661E-01
RMM:  10    -0.542101860562E+02   -0.37154E-02   -0.46845E-02 37498   0.108E+00    0.269E-01
RMM:  11    -0.542122200427E+02   -0.20340E-02   -0.19353E-02 37772   0.614E-01    0.196E-01
RMM:  12    -0.542134916581E+02   -0.12716E-02   -0.79820E-03 40035   0.388E-01    0.106E-01
RMM:  13    -0.542138485510E+02   -0.35689E-03   -0.26435E-03 38083   0.235E-01    0.255E-02
RMM:  14    -0.542140223590E+02   -0.17381E-03   -0.13671E-03 39473   0.160E-01    0.184E-02
WARNING in EDDRMM: call to ZHEGV failed, returncode =   6  3      4
WARNING in EDDRMM: call to ZHEGV failed, returncode =   8  4      4
RMM:  15    -0.542141025901E+02   -0.80231E-04   -0.57465E-04 38422   0.103E-01    0.110E-02
RMM:  16    -0.542141370719E+02   -0.34482E-04   -0.26088E-04 37010   0.690E-02    0.450E-03
RMM:  17    -0.542141539450E+02   -0.16873E-04   -0.11738E-04 32315   0.489E-02    0.211E-03
RMM:  18    -0.542141608372E+02   -0.68922E-05   -0.51948E-05 27820   0.363E-02
   1 F= -.54214161E+02 E0= -.54214161E+02  d E =0.000000E+00  mag=    -0.0000
